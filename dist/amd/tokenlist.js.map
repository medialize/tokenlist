{"version":3,"sources":["../../src/tokenlist.js"],"names":[],"mappings":"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","file":"tokenlist.js","sourcesContent":["/*\n  Implements the DOMTokenList interface\n    https://dom.spec.whatwg.org/#interface-domtokenlist\n\n  Inspired by\n    https://github.com/bkardell/tokenListFor/blob/master/_tokenListFor.js\n    https://github.com/jwilsson/domtokenlist/blob/master/src/DOMTokenList.js\n*/\n/*global Symbol, Proxy */\n\n// https://encoding.spec.whatwg.org/#ascii-whitespace\n// TAB, VT, FF, CR, Space\nconst asciiWhiteSpace = /[\\u0009\\u000A\\u000C\\u000D\\u0020]+/;\n\n// expression to verify a text is representing an integer\nconst numericPattern = /^\\d+$/;\n\nfunction verifyToken(token) {\n  // NOTE: throwing Error instead of DOMException because the latter\n  // doesn't work properly across browsers, let alone Node.\n\n  if (token === '') {\n    // https://heycam.github.io/webidl/#syntaxerror\n    // throw new DOMException('Token must not be the empty string', 'SyntaxError', 12);\n    throw new Error('Token must not be the empty string');\n  }\n\n  if (asciiWhiteSpace.test(token)) {\n    // https://heycam.github.io/webidl/#invalidcharactererror\n    // throw new _DOMException('Token must not contain ASCII whitespace', 'InvalidCharacterError', 5);\n    throw new Error('Token must not contain ASCII whitespace');\n  }\n}\n\n// dummy to compensate for missing encode/decode functions\nfunction passthru(value) {\n  return value;\n}\n\nfunction uniqueArray(list) {\n  const lookup = {};\n  return list.filter(function(token) {\n    if (lookup[token]) {\n      return false;\n    }\n\n    lookup[token] = true;\n    return true;\n  });\n}\n\n// https://dom.spec.whatwg.org/#concept-ordered-set-parser\nfunction parse(text) {\n  text = text && text.trim() || '';\n  if (!text) {\n    return [];\n  }\n\n  const tokens = text.split(asciiWhiteSpace);\n  return uniqueArray(tokens);\n}\n\n// https://dom.spec.whatwg.org/#concept-ordered-set-serializer\nfunction serialize(tokens) {\n  return tokens.join(' ');\n}\n\nfunction removeFromArray(list, item) {\n  const index = list.indexOf(item);\n  if (index !== -1) {\n    list.splice(index, 1);\n  }\n}\n\nfunction addToArray(list, item) {\n  if (list.indexOf(item) === -1) {\n    list.push(item);\n  }\n}\n\nexport default function TokenList(read, write, supported, decode, encode) {\n  // noop in case we're able to use Proxy,\n  // overwritten at the end of the file if not.\n  let updateGetterProxy = function(){};\n\n  const getTokens = function() {\n    // obtain serialized tokens from source\n    const text = read();\n    // convert to list of unique tokens\n    const tokens = parse(text);\n    // update list[index] accessory where Proxy isn't available\n    updateGetterProxy(tokens.length);\n    return tokens;\n  };\n\n  const setTokens = function(tokens) {\n    // convert list of tokens to text\n    const text = serialize(tokens);\n    // save to source\n    write(text);\n  };\n\n  const stringify = function() {\n    // currently specifed as `return read()` but about to change back\n    // see https://github.com/whatwg/dom/issues/105\n    const tokens = getTokens();\n    return serialize(tokens);\n  };\n\n  if (!decode) {\n    decode = passthru;\n  }\n\n  if (!encode) {\n    encode = passthru;\n  }\n\n  const tokenlist = {\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-stringifier\n    toString: stringify,\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-item\n    item: function(index) {\n      // NOTE: unspecified behavior, but implemented in Gecko and Blink\n      index = parseInt(index);\n      if (isNaN(index)) {\n        index = 0;\n      }\n\n      const token = getTokens()[index] || null;\n      return decode(token);\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-contains\n    contains: function(token) {\n      token = encode(token);\n      // NOTE: unspecified behavior, but implemented in Gecko and Blink\n      verifyToken(token);\n\n      return getTokens().indexOf(token) !== -1;\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-add\n    add: function(...input) {\n      input = input.map(encode);\n      input.forEach(verifyToken);\n\n      const tokens = getTokens();\n      const length = tokens.length;\n\n      input.forEach(function(token) {\n        addToArray(tokens, token);\n      });\n\n      if (tokens.length !== length) {\n        setTokens(tokens);\n      }\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-remove\n    remove: function(...input) {\n      input = input.map(encode);\n      input.forEach(verifyToken);\n\n      const tokens = getTokens();\n      const length = tokens.length;\n      input.forEach(function(token) {\n        removeFromArray(tokens, token);\n      });\n\n      if (tokens.length !== length) {\n        setTokens(tokens);\n      }\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-toggle\n    toggle: function(token, force) {\n      token = encode(token);\n      verifyToken(token);\n\n      const tokens = getTokens();\n      const exists = tokens.indexOf(token) !== -1;\n\n      if (exists) {\n        if (!force) {\n          removeFromArray(tokens, token);\n          setTokens(tokens);\n          return false;\n        }\n\n        // forced add of existing token\n        return true;\n      }\n\n      if (force === false) {\n        // forced removal of non-existing token\n        return false;\n      }\n\n      // add of non-existing token\n      addToArray(tokens, token);\n      setTokens(tokens);\n      return true;\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-replace\n    // Note: will collapse duplicates, i.e. replace(\"a\", \"x\")\n    // will turn \"c a b a a d\" into \"c x b d\",\n    replace: function(oldToken, newToken) {\n      oldToken = encode(oldToken);\n      newToken = encode(newToken);\n\n      verifyToken(oldToken);\n      verifyToken(newToken);\n\n      const tokens = getTokens();\n      const index = tokens.indexOf(oldToken);\n\n      if (index === -1) {\n        // token to replace does not exist\n        return;\n      }\n\n      tokens[index] = newToken;\n      setTokens(tokens);\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-supports\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/supports\n    supports: function(token) {\n      if (!supported) {\n        throw new TypeError('No supported tokens defined');\n      }\n\n      token = (encode(token) || '').toLowerCase();\n      const isSupported = supported(token);\n      return Boolean(isSupported);\n    },\n  };\n\n  Object.defineProperties(tokenlist, {\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-length\n    length: {\n      get: () => getTokens().length,\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-value\n    value: {\n      get: stringify,\n      set: function(value) {\n        const tokens = parse(value);\n        setTokens(tokens);\n      },\n    },\n  });\n\n  // iterable<DOMString> https://dom.spec.whatwg.org/#interface-domtokenlist\n  const _iterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n  tokenlist[_iterator] = function() {\n    const tokens = getTokens();\n    let index = 0;\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n    return {\n      next: function() {\n        return index < tokens.length\n          ? { value: tokens[index++], done: false }\n          : { value: undefined, done: true };\n      },\n    };\n  };\n\n  if (typeof Proxy !== 'undefined') {\n    return new Proxy(tokenlist, {\n      get: function(target, property) {\n        const value = target[property];\n        if (value !== undefined) {\n          return value;\n        }\n\n        if (!numericPattern.test(property)) {\n          return undefined;\n        }\n\n        return tokenlist.item(property) || undefined;\n      },\n    });\n  } else {\n    // https://github.com/Alhadis/DOMTokenList/blob/v1.0.0/src/token-list.js#L69-L81\n    let registeredGetters = 0;\n    const proxyItem = function(key) {\n      Object.defineProperty(tokenlist, key, {\n        configurable: false,\n        get: () => tokenlist.item(key) || undefined,\n      });\n    };\n\n    updateGetterProxy = function(length) {\n      for (; registeredGetters <= length; registeredGetters++) {\n        proxyItem(registeredGetters);\n      }\n    };\n\n    tokenlist.item(0);\n  }\n\n  return tokenlist;\n}\n"]}