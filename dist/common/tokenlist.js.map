{"version":3,"sources":["../../src/tokenlist.js"],"names":[],"mappings":"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","file":"tokenlist.js","sourcesContent":["/*\n  Implements the DOMTokenList interface\n    https://dom.spec.whatwg.org/#interface-domtokenlist\n\n  Inspired by\n    https://github.com/bkardell/tokenListFor/blob/master/_tokenListFor.js\n    https://github.com/jwilsson/domtokenlist/blob/master/src/DOMTokenList.js\n*/\n/*global Symbol, Proxy */\n\n// https://encoding.spec.whatwg.org/#ascii-whitespace\n// TAB, VT, FF, CR, Space\nconst asciiWhiteSpace = /[\\u0009\\u000A\\u000C\\u000D\\u0020]+/;\n\n// expression to verify a text is representing an integer\nconst numericPattern = /^\\d+$/;\n\nfunction verifyToken(token) {\n  // NOTE: throwing Error instead of DOMException because the latter\n  // doesn't work properly across browsers, let alone Node.\n\n  if (token === '') {\n    // https://heycam.github.io/webidl/#syntaxerror\n    // throw new DOMException('Token must not be the empty string', 'SyntaxError', 12);\n    throw new Error('Token must not be the empty string');\n  }\n\n  if (asciiWhiteSpace.test(token)) {\n    // https://heycam.github.io/webidl/#invalidcharactererror\n    // throw new _DOMException('Token must not contain ASCII whitespace', 'InvalidCharacterError', 5);\n    throw new Error('Token must not contain ASCII whitespace');\n  }\n}\n\n// dummy to compensate for missing encode/decode functions\nfunction passthru(value) {\n  return value;\n}\n\nfunction uniqueArray(list) {\n  const lookup = {};\n  return list.filter(function(token) {\n    if (lookup[token]) {\n      return false;\n    }\n\n    lookup[token] = true;\n    return true;\n  });\n}\n\n// https://dom.spec.whatwg.org/#concept-ordered-set-parser\nfunction parse(text) {\n  text = text && text.trim() || '';\n  if (!text) {\n    return [];\n  }\n\n  const tokens = text.split(asciiWhiteSpace);\n  return uniqueArray(tokens);\n}\n\n// https://dom.spec.whatwg.org/#concept-ordered-set-serializer\nfunction serialize(tokens) {\n  return tokens.join(' ');\n}\n\nfunction removeFromArray(list, item) {\n  const index = list.indexOf(item);\n  if (index !== -1) {\n    list.splice(index, 1);\n  }\n}\n\nfunction addToArray(list, item) {\n  if (list.indexOf(item) === -1) {\n    list.push(item);\n  }\n}\n\nexport default function TokenList(read, write, supported, decode, encode) {\n  // noop in case we're able to use Proxy,\n  // overwritten at the end of the file if not.\n  let updateGetterProxy = function(){};\n\n  const getTokens = function() {\n    // obtain serialized tokens from source\n    const text = read();\n    // convert to list of unique tokens\n    const tokens = parse(text);\n    // update list[index] accessory where Proxy isn't available\n    updateGetterProxy(tokens.length);\n    return tokens;\n  };\n\n  const setTokens = function(tokens) {\n    // convert list of tokens to text\n    const text = serialize(tokens);\n    // save to source\n    write(text);\n  };\n\n  const stringify = function() {\n    // currently specifed as `return read()` but about to change back\n    // see https://github.com/whatwg/dom/issues/105\n    const tokens = getTokens();\n    return serialize(tokens);\n  };\n\n  if (!decode) {\n    decode = passthru;\n  }\n\n  if (!encode) {\n    encode = passthru;\n  }\n\n  const tokenlist = {\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-stringifier\n    toString: stringify,\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-item\n    item: function(index) {\n      // NOTE: unspecified behavior, but implemented in Gecko and Blink\n      index = parseInt(index);\n      if (isNaN(index)) {\n        index = 0;\n      }\n\n      const token = getTokens()[index] || null;\n      return decode(token);\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-contains\n    contains: function(token) {\n      token = encode(token);\n      // NOTE: unspecified behavior, but implemented in Gecko and Blink\n      verifyToken(token);\n\n      return getTokens().indexOf(token) !== -1;\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-add\n    add: function(...input) {\n      input = input.map(encode);\n      input.forEach(verifyToken);\n\n      const tokens = getTokens();\n      const length = tokens.length;\n\n      input.forEach(function(token) {\n        addToArray(tokens, token);\n      });\n\n      if (tokens.length !== length) {\n        setTokens(tokens);\n      }\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-remove\n    remove: function(...input) {\n      input = input.map(encode);\n      input.forEach(verifyToken);\n\n      const tokens = getTokens();\n      const length = tokens.length;\n      input.forEach(function(token) {\n        removeFromArray(tokens, token);\n      });\n\n      if (tokens.length !== length) {\n        setTokens(tokens);\n      }\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-toggle\n    toggle: function(token, force) {\n      token = encode(token);\n      verifyToken(token);\n\n      const tokens = getTokens();\n      const exists = tokens.indexOf(token) !== -1;\n\n      if (exists) {\n        if (!force) {\n          removeFromArray(tokens, token);\n          setTokens(tokens);\n          return false;\n        }\n\n        // forced add of existing token\n        return true;\n      }\n\n      if (force === false) {\n        // forced removal of non-existing token\n        return false;\n      }\n\n      // add of non-existing token\n      addToArray(tokens, token);\n      setTokens(tokens);\n      return true;\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-replace\n    // Note: will collapse duplicates, i.e. replace(\"a\", \"x\")\n    // will turn \"c a b a a d\" into \"c x b d\",\n    replace: function(oldToken, newToken) {\n      oldToken = encode(oldToken);\n      newToken = encode(newToken);\n\n      verifyToken(oldToken);\n      verifyToken(newToken);\n\n      const tokens = getTokens();\n      const index = tokens.indexOf(oldToken);\n\n      if (index === -1) {\n        // token to replace does not exist\n        return;\n      }\n\n      tokens[index] = newToken;\n      setTokens(tokens);\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-supports\n    // https://developer.mozilla.org/en-US/docs/Web/API/DOMTokenList/supports\n    supports: function(token) {\n      if (!supported) {\n        throw new TypeError('No supported tokens defined');\n      }\n\n      token = (encode(token) || '').toLowerCase();\n      const isSupported = supported(token);\n      return Boolean(isSupported);\n    },\n  };\n\n  Object.defineProperties(tokenlist, {\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-length\n    length: {\n      get: () => getTokens().length,\n    },\n\n    // https://dom.spec.whatwg.org/#dom-domtokenlist-value\n    value: {\n      get: stringify,\n      set: function(value) {\n        const tokens = parse(value);\n        setTokens(tokens);\n      },\n    },\n  });\n\n  // iterable<DOMString> https://dom.spec.whatwg.org/#interface-domtokenlist\n  const _iterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n  tokenlist[_iterator] = function() {\n    const tokens = getTokens();\n    let index = 0;\n\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\n    return {\n      next: function() {\n        return index < tokens.length\n          ? { value: tokens[index++], done: false }\n          : { value: undefined, done: true };\n      },\n    };\n  };\n\n  if (typeof Proxy !== 'undefined') {\n    return new Proxy(tokenlist, {\n      get: function(target, property) {\n        const value = target[property];\n        if (value !== undefined) {\n          return value;\n        }\n\n        if (!numericPattern.test(property)) {\n          return undefined;\n        }\n\n        return tokenlist.item(property) || undefined;\n      },\n    });\n  } else {\n    // https://github.com/Alhadis/DOMTokenList/blob/v1.0.0/src/token-list.js#L69-L81\n    let registeredGetters = 0;\n    const proxyItem = function(key) {\n      Object.defineProperty(tokenlist, key, {\n        configurable: false,\n        get: () => tokenlist.item(key) || undefined,\n      });\n    };\n\n    updateGetterProxy = function(length) {\n      for (; registeredGetters <= length; registeredGetters++) {\n        proxyItem(registeredGetters);\n      }\n    };\n\n    tokenlist.item(0);\n  }\n\n  return tokenlist;\n}\n"]}